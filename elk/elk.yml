---
- name: ElasticSearch playbook for building search infrastructure
  hosts: tag_ansible_group_elknode
  become: true
  vars_files:
    - "group_vars/all"

  vars:
    - es_instance_name: "node1"
  
  roles:
    - geerlingguy.repo-epel
    - geerlingguy.java
    - geerlingguy.elasticsearch
    - geerlingguy.logstash
    - geerlingguy.kibana
    - geerlingguy.nginx

  tasks:

  - name: Kibana start stop script
    template:
      src=initkibana.j2
      dest=/etc/init.d/kibana
      owner=root
      group=root
      mode=0755
    notify: Restart_Kibana

  - yum:
      name: nginx
      state: present

  - name: Setup Nginx reverse proxy for kibana
    template: 
      src=kibana.conf.j2
      dest=/etc/nginx/conf.d/default.conf
      owner=root
      group=root
      mode=0644

  - name: copy NGINX users htpasswd file 
    template:
      src=htpasswd.users
      dest=/etc/nginx/htpasswd.users
      owner=root
      group=root
      mode=0755
    tags: htpasswd

  - name: Create nginx ssl certificate structure
    file: path=/etc/pki/tls/certs
      state=directory
      mode=0755

  - name: Create nginx ssl key structure
    file: path=/etc/pki/tls/private
      state=directory
      mode=0755

  - name: Create nginx ssl request structure
    file: path=/etc/pki/tls/csr
      state=directory
      mode=0755
    notify: Restart_Nginx 

#  - name: Generate a Self Signed OpenSSL certificate
#    openssl_certificate:
#      path: /etc/pki/tls/certs/kibana-access.pem  
#      privatekey_path: /etc/pki/tls/private/kibana-access.key
#      csr_path: /etc/pki/tls/csr/kibana.csr
#      provider: selfsigned
  - name: Generate nginx/kibana SSL certificates
    shell: "openssl req -x509 -batch -nodes -days 365 -newkey rsa:2048 -keyout /etc/pki/tls/private/kibana-access.key -out /etc/pki/tls/certs/kibana-access.pem"

#  - name: Generate LogStash SSL certificates
#    shell: "openssl req -x509 -batch -nodes -days 365 -newkey rsa:2048 -keyout /etc/pki/logstash/logstash-forwarder.key -out /etc/pki/logstash/logstash-forwarder.crt"


#openssl req -x509 -batch -nodes -days 365 -newkey rsa:2048 \
#  -keyout /etc/pki/tls/private/kibana-access.key -out /etc/pki/tls/certs/kibana-access.pem
  
  
  # Enable nginx service
  #- name: Enabling Nginx service
  #  systemd:
  #    name: nginx.service
  #    enabled: yes

  #- name: enabling Kibana service
  #  systemd:
  #    name: kibana.service
  #    state: started
  #    daemon_reload: yes


  # Install Pexpect to handle promts of the terminal
  - name: Installing Python Pexpect
    yum:
     name: pexpect
     #update_cache: yes
  # Writes the create user script in the temp directory
  - name: Create kibana admin user
    template:
      src=kibanaAdmin.j2
      dest=/tmp/createUser
      owner=root
      group=root
      mode=0744

#  # Runs the script to create Kibana admin user
#  - name: Create Kibana admin user
#    expect:
#      command: bash /tmp/createUser
#      responses:
#        'Password:' : "{{kibana_password}}"

  - name: Ensure elasticsearch user owns /etc/elasticsearch directories and files
    file:
      dest=/etc/elasticsearch
      owner=elasticsearch
      group=elasticsearch
      mode=0775
      recurse=yes

  - name: Ensure elasticsearch user owns /usr/share/elasticsearch directories and files
    file:
      dest=/usr/share/elasticsearch
      owner=elasticsearch
      group=elasticsearch
      mode=0775
      recurse=yes
    notify: Restart_Elastic

  handlers:
    - name: Restart_Nginx
      become: true
      systemd:
        name: nginx.service
        daemon_reload: yes
        state: restarted

    - name: Restart_Kibana
      become: true
      systemd:
        name: kibana.service
        daemon_reload: yes
        state: restarted

    - name: Restart_LogStash
      become: true
      systemd:
        name: logstash.service
        daemon_reload: yes
        state: restarted

    - name: Restart_Elastic
      become: true
      systemd:
        state: restarted
        daemon_reload: yes
        name: elasticsearch.service
