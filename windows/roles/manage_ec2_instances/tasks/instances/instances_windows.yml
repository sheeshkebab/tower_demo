---
- name: WINDOWS | Create instance 1
  ec2:
    assign_public_ip: true
    key_name: "{{ ec2_name_prefix }}-key"
    group: "{{ ec2_name_prefix }}-windows"
    instance_type: "{{ ec2_info['skylight_windows_instance']['size'] }}"
    image: "{{ win_instance_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    count_tag:
      Workshop_instance1: "{{ ec2_name_prefix }}-instance1"
    instance_tags:
      Workshop_instance1: "{{ ec2_name_prefix }}-instance1"
      App: AnsibleWorkshop
      Workshop: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{ student_total }}"
      short_name: "instance1"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    user_data: "{{ lookup('template', 'skylight_windows_userdata.j2', template_vars=dict(vm_name='instance1')) }}"
  register: instance1_output


- name: WINDOWS | Ensure tags are present for instance 1
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item.0 + 1 }}-instance1"
      Index: "{{ item[0] }}"
      Student: "student{{ item.0 + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
  with_indexed_items:
    - "{{ instance1_output.instances }}"
  when: instance1_output.instance_ids is not none
