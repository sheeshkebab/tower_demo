---

################# Setup invemtories ##################
- name: grab facts for instance 1
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_instance1": "{{ec2_name_prefix}}-instance1"
  register: instance1_node_facts

################### Get Passwords ###################

- name: Windows | Obtain windows passwords for instance1
  ec2_win_password:
    region: '{{ ec2_region }}'
    instance_id: "{{ item.instance_id }}"
    key_file: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    wait: true
    wait_timeout: 300
  with_items: "{{ instance1_node_facts.instances }}"
  register: ec2windows1_password
  when: instance1_node_facts is defined

- name: Print Default windows password
  debug:
    var: ec2windows1_password


################### Create inventories ###################

- name: Windows instance1 | Add new instance to host group
  add_host:
    hostname: "student{{ item.item.tags.Student | regex_replace('[^0-9]', '') }}-win1"
    short_name: "{{ item.item.tags.short_name }}"
    ansible_host: "{{ item.item.public_ip_address }}"
    private_ip: "{{ item.item.private_ip_address }}"
    ansible_port: 5986
    ansible_user: "Administrator"
    ansible_password: "{{ item.win_password }}"
    ansible_become_password: "{{ admin_password }}"
    ansible_connection: "winrm"
    ansible_winrm_transport: "ntlm"
    ansible_winrm_server_cert_validation: "ignore"
    ansible_winrm_operation_timeout_sec: 120
    ansible_winrm_read_timeout_sec: 150
    student: "{{ item.item.tags.Student | regex_replace('[^0-9]', '') }}"
    groups:
      - windows
  with_items: "{{ ec2windows1_password.results }}"
  when: ec2windows1_password is defined

- name: Windows | Wait for WinRM to come up
  wait_for_connection:
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['windows'] }}"
