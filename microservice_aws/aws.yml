---
- name: Multi purpose EC2 playbook - use the create or delete tag
  hosts: localhost
  gather_facts: False
  vars:
    instance_count: 1
    #security_group: 'sg-036c04403f8194aba'
    #subnet_id: 'subnet-c3295a8a'
    #ssh_key_name: 'etg-richard'
    #instance_size: 't2.micro'
    instance_tag: ''
    #ami_name: 'ami-1987757b'    # This is the RHEL AMI

  tasks:
  # https://aws.amazon.com/ec2/instance-types/
  # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html
  - name: Create RHEL instance in ec2
    ec2:
      image: "{{ ec2_image }}"
      instance_type: "{{ ec2_instance_type }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      key_name: "{{ ec2_keypair }}"
      region: "{{ ec2_region }}" 
      wait: yes 
      count: "{{ instance_count|int }}"
      instance_tags: "{'ansible_group':'{{ instance_tag }}', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
      #instance_tags:
      #  Ansible: "{{ instance_tag }}"
      vpc_subnet_id: "{{ ec2_subnet_id }}"
      assign_public_ip: yes
      group_id: "{{ ec2_security_group }}"  # you can say 'default' here
    register: ec2
    tags: create

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      delay: 60
      timeout: 320
      state: started
    with_items: "{{ ec2.instances }}"
    tags: create

  - name: Enumerate ec2 instances by tag
    ec2_instance_facts:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ ec2_region }}" 
      filters:
        "tag:ansible_group": "{{ instance_tag }}" 
    register: vmfacts 
    tags: 
      - delete

  - name: Display enumerated list
    debug: msg="{{ item.public_dns_name }} {{ item.public_ip }} {{ item.private_ip"
    with_items: "{{ ec2.instances }}"
    tags: 
      - delete 
      - create

  - name: Delete instances using enumerated list
    ec2:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ ec2_region }}" 
      state: absent
      instance_ids: '{{ item.instance_id }}'
    with_items: '{{ vmfacts.instances }}'
    tags: delete 

#  - name: AWS caller facts
#    aws_caller_facts:
#      region "{{ ec2_region }}"
#    register: whoami

#  - debug: var=whoami
#    tags:
#      - delete 
#      - create
