---
- name: Multi purpose EC2 playbook - use the create or delete tag
  hosts: localhost
  gather_facts: False
  vars:
    instance_count: 1
    instance_tag: ''
    # Access credentials are being set here to support the top level controller credential type.
    ec2_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    ec2_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    # Define these variables either in this playbook or via the Tower survey feature.
    #ec2_security_group: ''
    #ec2_subnet_id: ''
    #ec2_keypair: ''
    #ec2_instance_type: ''
    #ec2_ami_name: ''

  tasks:
  # https://aws.amazon.com/ec2/instance-types/
  # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html
  - name: Create RHEL instance in ec2
    amazon.aws.ec2_instance:
      image_id: "{{ ec2_image }}"
      instance_type: "{{ ec2_instance_type }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      key_name: "{{ ec2_keypair }}"
      region: "{{ ec2_region }}" 
      wait: true 
      count: "{{ instance_count|int }}"
      vpc_subnet_id: "{{ ec2_subnet_id }}"
      network:
        assign_public_ip: yes
      security_group: "{{ ec2_security_group }}"  # you can say 'default' here
      tags: "{'ansible_group':'{{ instance_tag }}', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'toweruser_''{{ tower_user_name }}'}"
    register: ec2
    tags: create

  - name: dump ec2 info
    debug:
      msg: "{{ ec2|to_yaml }}"

  - meta: end_play
 
  - name: Capture new instance metadata
    amazon.aws.ec2_instance_info:
      instance_ids:
        - "{{ item.instance_id }}"
      region: "{{ ec2_region }}" 
    with_items: "{{ ec2.instances }}"
    register: instance_facts 
    tags: create

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_ip_address }}"
      port: 22
      delay: 60
      timeout: 120
      state: started
    with_items: "{{ instance_facts.network_interfaces }}"
    #with_items: "{{ ec2.instances|map(attribute='public_ip')|list }}"
    tags: create

#  - name: Enumerate ec2 instances by tag
#    amazon.aws.ec2_instance_info:
#      aws_access_key: "{{ ec2_access_key }}"
#      aws_secret_key: "{{ ec2_secret_key }}"
#      region: "{{ ec2_region }}" 
#      filters:
#        "tag:ansible_group": "{{ instance_tag }}" 
#    register: vmfacts 
#    tags: 
#      - delete

  - name: Display enumerated list
    debug: msg="IP is {{ item }}"
    with_items: "{{ ec2.instances|map(attribute='public_ip_address')|list }}"
    tags: 
      - delete 
      - create

  - name: Delete instances using enumerated list
    amazon.aws.ec2:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ ec2_region }}" 
      state: absent
      instance_ids: '{{ item.instance_id }}'
    with_items: '{{ vmfacts.instances }}'
    tags: delete 
